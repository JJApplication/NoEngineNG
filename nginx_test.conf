# webservice入口配置文件
# 管理全局的服务

# 使用环境变量的方式定义全局变量 启动方式变更为zeus nginx
# 环境变量保存在zeus的nginx配置目录下
user root;
worker_processes 1;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 2048;
}

http {
    log_format  main  'Host: $http_host Addr: $remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    server_tokens off;
    underscores_in_headers on; # 支持自定义header
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             mime.types;
    default_type        application/octet-stream;

    client_max_body_size 20m;
    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # lua load
    lua_package_path "/app/lua/?.lua;;";

    # 全局变量
    lua_shared_dict dict_apps 128k;
    # init lua
    init_by_lua_file /app/lua/init.lua;
    # init worker
    init_worker_by_lua_file /app/lua/auto_reload.lua;
    # prehandle request
    access_by_lua_file /app/lua/pick_app.lua;
    # posthandle content resposne
    header_filter_by_lua_file /app/lua/response_headers.lua;

    # proxy server
    upstream proxy {
        server 127.0.0.1:8888;
    }

    # default
    server {
       listen 80 default;
       server_name _;
       default_type text/plain;
       location / {
          access_by_lua_file /app/lua/pick_app.lua;
#            content_by_lua_file /app/lua/echo_apps.lua;
        root /app/web;
        index index.html;
#            return 200 'Hello NoEngine';
       }
    }
}


